name: Tests

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, ubuntu-24.04-arm, macos-13, macos-14 ]
        api: [ blas, blasfeo ]
        mf: [ cm, pm ]
        precision: [ single, double ]
        include:
          - os: ubuntu-latest
            arch: amd64
          - os: ubuntu-24.04-arm
            arch: arm64
          - os: macos-13
            arch: amd64
          - os: macos-14
            arch: arm64
          - api: blasfeo
            mf: cm
            precision: double
            packalg: _packalg

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          channels: conda-forge
          activate-environment: blasfeo

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          # Compiler infrastructure
          conda install cmake compilers make pkg-config
          # Dependencies
          conda install libblas liblapack
          # Python packages
          pip3 install jinja2

      - name: Run tester
        shell: bash -l {0}
        working-directory: tests
        run: python3 tester.py testset_ci_${{ matrix.api }}_${{ matrix.mf }}_${{ matrix.precision }}_${{ matrix.arch }}${{ matrix.packalg }}.json

  # debug:
  #   strategy:
  #     fail-fast: false
    
  #   runs-on: ubuntu-24.04-arm

  #   steps:
  #     - uses: actions/checkout@v4

  #     - uses: conda-incubator/setup-miniconda@v3
  #       with:
  #         miniforge-version: latest
  #         channels: conda-forge
  #         activate-environment: blasfeo

  #     - name: Install dependencies
  #       shell: bash -l {0}
  #       run: |
  #         # Compiler infrastructure
  #         conda install cmake compilers make pkg-config
  #         # Dependencies
  #         conda install libblas liblapack
  #         # Python packages
  #         pip3 install jinja2

  #     - name: Run tester
  #       shell: bash -l {0}
  #       working-directory: tests
  #       run: python3 tester.py testset_debug.json
